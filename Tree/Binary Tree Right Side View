Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.
Approach: Last element of each level should be printed..

class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
      if(root==NULL){
          return {};
      }
        
      vector<int>result;
      int n;
      TreeNode*temp;
      queue<TreeNode*>q;
      q.push(root);
      while(!q.empty()){
        n=q.size();
        while(n--){
            temp=q.front();
            q.pop();
            if(n==0){
                result.push_back(temp->val);
            }
            if(temp->left!=NULL){
                q.push(temp->left);
            }
            if(temp->right!=NULL){
                q.push(temp->right);
            }
        }
      }
        return result;
    }
};

TC: O(Number of Nodes*Number of levels)=O(4*N)==O(N)
SC: O(N)
