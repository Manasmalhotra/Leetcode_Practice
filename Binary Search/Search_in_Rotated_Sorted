//Search in rotated sorted array.. Either of l..mid or mid..high will definitely be sorted. Apply Binary Search accordingly.
//https://leetcode.com/problems/search-in-rotated-sorted-array/
//Revised 19 March 2022.

class Solution {
public:
    int search(vector<int>& arr, int x) {
       int low=0,high=arr.size()-1,mid; 
    if(high==-1){return -1;}
       while(low<=high){
           mid=(low+high)/2;
           
           if(arr[mid]==x){
               return mid;
           }
           
           if(arr[low]<=arr[mid]){
               
               if(x<arr[mid] && x>=arr[low]){
                   high=mid-1;
               }
               else{
                   low=mid+1;
               }
           }
           else{
               if(x>arr[mid] && x<=arr[high]){
                   low=mid+1;
               }
               else{
                   high=mid-1;
               }
           }
       }
        return -1;
    }
};
