//https://leetcode.com/problems/number-of-islands/

class Solution {
public:
    void dfs(vector<vector<char>>& grid,vector<vector<int> >&vis,int i,int j,int n,int m){
        
        vis[i][j]=1;
        if(i-1>=0 && grid[i-1][j]!='0' && vis[i-1][j]==0){
            dfs(grid,vis,i-1,j,n,m);
        }
        if(i+1<n && grid[i+1][j]!='0' && vis[i+1][j]==0){
            dfs(grid,vis,i+1,j,n,m);
        }
        if(j-1>=0 && grid[i][j-1]!='0' && vis[i][j-1]==0){
            dfs(grid,vis,i,j-1,n,m);
        }
        if(j+1<m && grid[i][j+1]!='0' && vis[i][j+1]==0){
            dfs(grid,vis,i,j+1,n,m);
        }
    }
    
    int numIslands(vector<vector<char>>& grid) {
       int i,j,n=grid.size(),m=grid[0].size(),count=0;
        vector<vector<int>> vis( n , vector<int> (m,0));
        for(i=0;i<n;i++){
           for(j=0;j<m;j++){
               if(grid[i][j]!='0' && vis[i][j]==0){
                   dfs(grid,vis,i,j,n,m);
                   count+=1;
               }
           } 
        }
        return count;
    }
};
