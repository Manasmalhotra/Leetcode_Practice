//https://leetcode.com/problems/subtree-of-another-tree/

class Solution {
public:
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root==NULL && subRoot==NULL){
            return true;
        }
        if(root==NULL|| subRoot==NULL){
            return false;
        }
        if(isEqual(root,subRoot)){
            return true;
        }
        return isSubtree(root->right,subRoot)||isSubtree(root->left,subRoot);
    }
    
    bool isEqual(TreeNode*root,TreeNode*subRoot){
        if(root==NULL && subRoot==NULL){
            return true;
        }
        if(root==NULL|| subRoot==NULL){
            return false;
        }
        if(root->val!=subRoot->val){
            return false;
        }
        return isEqual(root->right,subRoot->right) && isEqual(root->left,subRoot->left);
    }
};
