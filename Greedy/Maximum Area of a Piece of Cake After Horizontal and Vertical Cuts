You are given a rectangular cake of size h x w and two arrays of integers horizontalCuts and verticalCuts where:

horizontalCuts[i] is the distance from the top of the rectangular cake to the ith horizontal cut and similarly, and
verticalCuts[j] is the distance from the left of the rectangular cake to the jth vertical cut.
Return the maximum area of a piece of cake after you cut at each horizontal and vertical position provided in the arrays horizontalCuts and verticalCuts. 
Since the answer can be a large number, return this modulo 109 + 7.

Since , horizontal andvertical lines are infinite each horizontal and vertical line will cut each other, therefore the diagram remains same.
Thus the maximum difference between the sorted consecutive horizontal and vertical lines give us the highest area.

class Solution {
public:
    int maxArea(int h, int w, vector<int>& hCuts, vector<int>& vCuts) {
        hCuts.push_back(h);
        vCuts.push_back(w);
        sort(hCuts.begin(),hCuts.end());
        sort(vCuts.begin(),vCuts.end());
        const int mod = 1e9 + 7;
        long long int i,difh,difv,maxh=hCuts[0],maxv=vCuts[0];
        for(i=1;i<hCuts.size();i++){
            difh=hCuts[i]-hCuts[i-1];
            maxh=max(maxh,difh);
        }
        for(i=1;i<vCuts.size();i++){
            difv=vCuts[i]-vCuts[i-1];
            maxv=max(maxv,difv);
        }
        return ((maxh%mod)* (maxv%mod))%mod;
    }
};


