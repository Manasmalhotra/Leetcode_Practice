//https://leetcode.com/problems/generate-parentheses/

/* we get balanced paretheses when open and close both eual to 0. We can always use opening bracket till its count is 0. We can use closing bracket only if close>open as 
we use when close==open ()) then invalid. Also when close<open, ()) invalid. thus this is only valid case :((). */

class Solution {
public:
    void solve(int open,int close,string output,vector<string>&result){
     
        if(open==0 && close==0){
            result.push_back(output);
        }
        if(open!=0){
            string op1=output;
            op1+='(';
            solve(open-1,close,op1,result);
        }
        if(open<close){
            string op2=output;
            op2+=')';
            solve(open,close-1,op2,result);
        }
    }
    
    vector<string> generateParenthesis(int n) {
        string output="";
        vector<string>result;
        solve(n,n,output,result);
        return result;
    }
};
